name: Build firmware and disk images
on:
  push:
    branches: [ "main" ]
  pull_request:
jobs:
  x64-alpine:
    name: Makrocosm Alpine x64 firmware
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Enable containerd image store
      run: |
        sudo sh -c "echo '{ \"features\": { \"containerd-snapshotter\": true } }' > /etc/docker/daemon.json"
        sudo systemctl restart docker
    - name: Setup environment
      run: echo "MAKROCOSM_GIT_CLONE_SHALLOW=1" >> $GITHUB_ENV
    - name: Build workspace and install cross-compile dependencies
      run: make deps
    - name: Build target
      run: make x64-alpine-release
    - uses: actions/upload-artifact@v4
      with:
        name: makrocosm-x64-alpine-firmware
        path: release
  rpi-alpine:
    name: Makrocosm Alpine Raspberry Pi firmware
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Enable containerd image store
      run: |
        sudo sh -c "echo '{ \"features\": { \"containerd-snapshotter\": true } }' > /etc/docker/daemon.json"
        sudo systemctl restart docker
    - name: Setup environment
      run: echo "MAKROCOSM_GIT_CLONE_SHALLOW=1" >> $GITHUB_ENV
    - name: Build workspace and install cross-compile dependencies
      run: make deps
    - name: Build target
      run: make rpi-alpine-release
    - uses: actions/upload-artifact@v4
      with:
        name: makrocosm-rpi-alpine-firmware
        path: release
  opi1-alpine:
    name: Makrocosm Alpine Orange Pi One firmware
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Enable containerd image store
      run: |
        sudo sh -c "echo '{ \"features\": { \"containerd-snapshotter\": true } }' > /etc/docker/daemon.json"
        sudo systemctl restart docker
    - name: Setup environment
      run: echo "MAKROCOSM_GIT_CLONE_SHALLOW=1" >> $GITHUB_ENV
    - name: Build workspace and install cross-compile dependencies
      run: make deps
    - name: Build Alpine Orange Pi One target
      run: make opi1-alpine-release
    - uses: actions/upload-artifact@v4
      with:
        name: makrocosm-opi1-alpine-firmware
        path: release
  bplay-alpine:
    name: Makrocosm Alpine BeaglePlay
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: recursive
    - name: Enable containerd image store
      run: |
        sudo sh -c "echo '{ \"features\": { \"containerd-snapshotter\": true } }' > /etc/docker/daemon.json"
        sudo systemctl restart docker
    - name: Setup environment
      run: echo "MAKROCOSM_GIT_CLONE_SHALLOW=1" >> $GITHUB_ENV
    - name: Build workspace and install cross-compile dependencies
      run: make deps
    - name: Build Alpine BeaglePlay target
      run: make bplay-alpine-release
    - uses: actions/upload-artifact@v4
      with:
        name: makrocosm-bplay-alpine-firmware
        path: release
